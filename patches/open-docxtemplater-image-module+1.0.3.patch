diff --git a/node_modules/open-docxtemplater-image-module/js/imgManager.js b/node_modules/open-docxtemplater-image-module/js/imgManager.js
index f1c4a5e..3bb021c 100644
--- a/node_modules/open-docxtemplater-image-module/js/imgManager.js
+++ b/node_modules/open-docxtemplater-image-module/js/imgManager.js
@@ -2,8 +2,6 @@
 
 var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
 
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
 var DocUtils = require("./docUtils");
 var extensionRegex = /[^.]+\.([^.]+)/;
 
@@ -26,8 +24,6 @@ var rels = {
 
 module.exports = function () {
 	function ImgManager(zip, fileName, xmlDocuments, fileType) {
-		_classCallCheck(this, ImgManager);
-
 		this.fileName = fileName;
 		this.prefix = rels.getPrefix(fileType);
 		this.zip = zip;
diff --git a/node_modules/open-docxtemplater-image-module/js/index.js b/node_modules/open-docxtemplater-image-module/js/index.js
index e064b2e..d6da00c 100644
--- a/node_modules/open-docxtemplater-image-module/js/index.js
+++ b/node_modules/open-docxtemplater-image-module/js/index.js
@@ -2,8 +2,6 @@
 
 var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
 
-function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
-
 var templates = require("./templates");
 var DocUtils = require("docxtemplater").DocUtils;
 var DOMParser = require("xmldom").DOMParser;
@@ -48,8 +46,6 @@ function getInnerPptx(_ref2) {
 
 var ImageModule = function () {
 	function ImageModule(options) {
-		_classCallCheck(this, ImageModule);
-
 		this.name = "ImageModule";
 		this.options = options || {};
 		this.imgManagers = {};
@@ -122,7 +118,7 @@ var ImageModule = function () {
 			if (!part.type === "placeholder" || part.module !== moduleName) {
 				return null;
 			}
-			var tagValue = options.scopeManager.getValue(part.value);
+			var tagValue = options.scopeManager.getValue(part.value, { part });
 			if (!tagValue) {
 				return { value: this.fileTypeConfig.tagTextXml };
 			}
